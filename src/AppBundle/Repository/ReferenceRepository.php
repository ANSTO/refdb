<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Search;
use Doctrine\ORM\Query\Expr\Join;

/**
 * ReferenceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReferenceRepository extends \Doctrine\ORM\EntityRepository
{
    public function search(Search $search) {

        $query = $this->createQueryBuilder("r");

        $query
            ->join("r.conference","c");

        $searching = false;

        if ($search->getConference() !== null) {
            $searching = true;
            $query
                ->andWhere("c.code LIKE :conf")
                ->orWhere("c.name LIKE :conf")
                ->setParameter("conf", "%" . $search->getConference() . "%");
        }

        if ($search->getLocation() !== null) {
            $searching = true;
            $query->andWhere("c.location LIKE :location")
                ->setParameter("location", "%" . $search->getLocation() . "%");
        }

        if ($search->getDate() !== null) {
            $searching = true;
            $query->andWhere("c.year LIKE :year")
                ->setParameter("year", "%" . $search->getDate() . "%");
        }

        if ($search->getPaperId() !== null) {
            $searching = true;
            $query->andWhere("r.paperId LIKE :paperId")
                ->setParameter("paperId", "%" . $search->getPaperId() . "%");
        }

        if ($search->getTitle() !== null) {
            $searching = true;
            $query->andWhere("r.title LIKE :title")
                ->setParameter("title", "%" . $search->getTitle() . "%");
        }
        if ($search->getAuthor() !== null) {
            $searching = true;
            $query->innerJoin("r.authors","a", Join::WITH, "a.name LIKE :author")
                ->setParameter("author", "%" . $search->getAuthor() . "%");
        }

        if ($searching == false) {
            return [];
        }


        return $query
            ->setMaxResults(5)
            ->getQuery()
            ->getResult();
    }
}
